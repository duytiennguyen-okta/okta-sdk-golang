/*
Okta Admin Management

Testing TemplateApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package okta

import (
	"context"
	"testing"

	openapiclient "./openapi"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_okta_TemplateApiService(t *testing.T) {
	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test TemplateApiService CreateSmsTemplate", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.TemplateApi.CreateSmsTemplate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test TemplateApiService DeleteSmsTemplate", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var templateId string

		resp, httpRes, err := apiClient.TemplateApi.DeleteSmsTemplate(context.Background(), templateId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test TemplateApiService GetSmsTemplate", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var templateId string

		resp, httpRes, err := apiClient.TemplateApi.GetSmsTemplate(context.Background(), templateId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test TemplateApiService ListSmsTemplates", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.TemplateApi.ListSmsTemplates(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test TemplateApiService ReplaceSmsTemplate", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var templateId string

		resp, httpRes, err := apiClient.TemplateApi.ReplaceSmsTemplate(context.Background(), templateId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test TemplateApiService UpdateSmsTemplate", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var templateId string

		resp, httpRes, err := apiClient.TemplateApi.UpdateSmsTemplate(context.Background(), templateId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})
}

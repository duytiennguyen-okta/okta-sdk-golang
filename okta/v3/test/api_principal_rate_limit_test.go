/*
Okta Admin Management

Testing PrincipalRateLimitApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package okta

import (
	"context"
	"testing"

	openapiclient "./openapi"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_okta_PrincipalRateLimitApiService(t *testing.T) {
	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test PrincipalRateLimitApiService CreatePrincipalRateLimitEntity", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.PrincipalRateLimitApi.CreatePrincipalRateLimitEntity(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test PrincipalRateLimitApiService GetPrincipalRateLimitEntity", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var principalRateLimitId string

		resp, httpRes, err := apiClient.PrincipalRateLimitApi.GetPrincipalRateLimitEntity(context.Background(), principalRateLimitId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test PrincipalRateLimitApiService ListPrincipalRateLimitEntities", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.PrincipalRateLimitApi.ListPrincipalRateLimitEntities(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test PrincipalRateLimitApiService ReplacePrincipalRateLimitEntity", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var principalRateLimitId string

		resp, httpRes, err := apiClient.PrincipalRateLimitApi.ReplacePrincipalRateLimitEntity(context.Background(), principalRateLimitId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})
}

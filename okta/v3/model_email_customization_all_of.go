/*
Okta Admin Management

Allows customers to easily access the Okta Management APIs

Copyright 2018 - Present Okta, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

API version: 4.0.0
Contact: devex-public@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
package okta

import (
	"encoding/json"
	"time"
)

// EmailCustomizationAllOf struct for EmailCustomizationAllOf
type EmailCustomizationAllOf struct {
	// The UTC time at which this email customization was created.
	Created *time.Time `json:"created,omitempty"`
	// A unique identifier for this email customization.
	Id *string `json:"id,omitempty"`
	// Whether this is the default customization for the email template. Each customized email template must have exactly one default customization. Defaults to `true` for the first customization and `false` thereafter.
	IsDefault *bool `json:"isDefault,omitempty"`
	// The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646).
	Language string `json:"language"`
	// The UTC time at which this email customization was last updated.
	LastUpdated          *time.Time                    `json:"lastUpdated,omitempty"`
	Links                *EmailCustomizationAllOfLinks `json:"_links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EmailCustomizationAllOf EmailCustomizationAllOf

// NewEmailCustomizationAllOf instantiates a new EmailCustomizationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailCustomizationAllOf(language string) *EmailCustomizationAllOf {
	this := EmailCustomizationAllOf{}
	this.Language = language
	return &this
}

// NewEmailCustomizationAllOfWithDefaults instantiates a new EmailCustomizationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailCustomizationAllOfWithDefaults() *EmailCustomizationAllOf {
	this := EmailCustomizationAllOf{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *EmailCustomizationAllOf) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailCustomizationAllOf) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *EmailCustomizationAllOf) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *EmailCustomizationAllOf) SetCreated(v time.Time) {
	o.Created = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EmailCustomizationAllOf) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailCustomizationAllOf) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EmailCustomizationAllOf) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EmailCustomizationAllOf) SetId(v string) {
	o.Id = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *EmailCustomizationAllOf) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailCustomizationAllOf) GetIsDefaultOk() (*bool, bool) {
	if o == nil || o.IsDefault == nil {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *EmailCustomizationAllOf) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *EmailCustomizationAllOf) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetLanguage returns the Language field value
func (o *EmailCustomizationAllOf) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *EmailCustomizationAllOf) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *EmailCustomizationAllOf) SetLanguage(v string) {
	o.Language = v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *EmailCustomizationAllOf) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailCustomizationAllOf) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *EmailCustomizationAllOf) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *EmailCustomizationAllOf) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *EmailCustomizationAllOf) GetLinks() EmailCustomizationAllOfLinks {
	if o == nil || o.Links == nil {
		var ret EmailCustomizationAllOfLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailCustomizationAllOf) GetLinksOk() (*EmailCustomizationAllOfLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *EmailCustomizationAllOf) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given EmailCustomizationAllOfLinks and assigns it to the Links field.
func (o *EmailCustomizationAllOf) SetLinks(v EmailCustomizationAllOfLinks) {
	o.Links = &v
}

func (o EmailCustomizationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsDefault != nil {
		toSerialize["isDefault"] = o.IsDefault
	}
	if true {
		toSerialize["language"] = o.Language
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *EmailCustomizationAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varEmailCustomizationAllOf := _EmailCustomizationAllOf{}

	err = json.Unmarshal(bytes, &varEmailCustomizationAllOf)
	if err == nil {
		*o = EmailCustomizationAllOf(varEmailCustomizationAllOf)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &additionalProperties)
	if err == nil {
		delete(additionalProperties, "created")
		delete(additionalProperties, "id")
		delete(additionalProperties, "isDefault")
		delete(additionalProperties, "language")
		delete(additionalProperties, "lastUpdated")
		delete(additionalProperties, "_links")
		o.AdditionalProperties = additionalProperties
	} else {
		return err
	}

	return err
}

type NullableEmailCustomizationAllOf struct {
	value *EmailCustomizationAllOf
	isSet bool
}

func (v NullableEmailCustomizationAllOf) Get() *EmailCustomizationAllOf {
	return v.value
}

func (v *NullableEmailCustomizationAllOf) Set(val *EmailCustomizationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailCustomizationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailCustomizationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailCustomizationAllOf(val *EmailCustomizationAllOf) *NullableEmailCustomizationAllOf {
	return &NullableEmailCustomizationAllOf{value: val, isSet: true}
}

func (v NullableEmailCustomizationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailCustomizationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
